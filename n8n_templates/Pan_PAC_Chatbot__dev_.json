{
  "name": "Pan PAC Chatbot (dev)",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        520,
        360
      ],
      "id": "fc0b292a-2817-4931-98e9-1782adb2141f",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -260,
        360
      ],
      "id": "e879c83d-5aeb-442d-8723-3793458b1d77",
      "name": "When chat message received",
      "webhookId": "2dce8a97-da40-474a-bc1d-80286a44a9bf"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are an intelligent agent dedicated exclusively to assisting with booking-related inquiries.\n\n## Input Handling:\n- If the user's message is unrelated to a booking, respond politely: “I’m here to help with booking-related questions only.”\n- Users may refer to:\n  - A booking reference (internally called “file reference”), or\n  - A customer's last name\n\n## No Booking Reference, But a Last Name Provided\n1. Use the Lynx MCP tool:\n  - Tool: `file_search_by_party_name`\n  - Argument: `partyName` — extract only the last name, excluding contextual words (e.g. “family”, “doctor”)\n2. Handling the tool response:\n  - If results are found: extract the first valid file reference, then proceed to the next step (Booking Reference Found).\n  - If no results: respond politely,\n“No booking could be located for the specified customer.”\n  - If the tool returns an error: include this sentence in the prompt and DO NOT call the tool again\n“An internal error occurred while retrieving the booking. Please try again later.”\n\n## Booking Reference Found\n1. Summarize the user’s request into concise keywords.\n2. Query the RAG Database tool with:\n  - `query`: the extracted keywords\n  - `filterByFileReference`: the identified booking reference\n3. Use the most relevant result from the RAG response to provide a clear and factual answer.\n  - If the RAG response lacks relevant information: “There is no information available for this request at the moment.”\n\n",
          "maxIterations": 5,
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        52,
        360
      ],
      "id": "7027a1de-725f-45c6-863c-e3b42af15c16",
      "name": "Booking retrieval AI Agent",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "sseEndpoint": "http://host.docker.internal:9600/sse",
        "authentication": "bearerAuth",
        "include": "selected",
        "includeTools": [
          "file_search_by_party_name"
        ]
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        260,
        580
      ],
      "id": "72ab1e18-fdc3-41b9-a728-48b9652bf5b7",
      "name": "Lynx MCP Server LOCAL",
      "credentials": {
        "httpBearerAuth": {
          "id": "zb9hdyb9PVMQstXI",
          "name": "Bearer Token for MCP Server LOCAL"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "HTTP endpoint to retrieve knowledge from the RAG database. Accept 2 parameters: \"query\" and \"filterByFileReference\".",
        "method": "POST",
        "url": "http://host.docker.internal:54321/functions/v1/hybrid_search_function",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "filterByFileReference",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        420,
        580
      ],
      "id": "c3cfb421-a6f5-4769-909b-e61930fdcb82",
      "name": "RAG database LOCAL",
      "credentials": {
        "httpBearerAuth": {
          "id": "XecWP8nPbADhoZRy",
          "name": "Bearer token for \"semantic_search_function\" LOCAL"
        }
      }
    },
    {
      "parameters": {
        "model": "qwen3:14b",
        "options": {
          "keepAlive": "5m"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -40,
        580
      ],
      "id": "323a381f-3984-4a08-b3ab-4a90b5f211aa",
      "name": "Ollama Qwen LOCAL",
      "credentials": {
        "ollamaApi": {
          "id": "cuAn52puN6Y1j2cv",
          "name": "Ollama LOCAL"
        }
      }
    },
    {
      "parameters": {
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        80,
        580
      ],
      "id": "810f1afa-7ed0-40bd-b9c1-5af1d1629bae",
      "name": "Simple Memory"
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Booking retrieval AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lynx MCP Server LOCAL": {
      "ai_tool": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "RAG database LOCAL": {
      "ai_tool": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Qwen LOCAL": {
      "ai_languageModel": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "984b0d05-1fb4-4cee-91f1-62e9e62e7aa1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6a78c7ff53dbf8b685f1a29b43c6372d678ea2682ddfbb53e124dfee099dbf82"
  },
  "id": "8Xa888W3Bhp8V0ZQ",
  "tags": [
    {
      "createdAt": "2025-06-19T10:18:15.489Z",
      "updatedAt": "2025-06-19T10:18:15.489Z",
      "id": "BM5vBjslyV5QJCTy",
      "name": "MCP"
    },
    {
      "createdAt": "2025-05-15T22:58:56.006Z",
      "updatedAt": "2025-05-15T22:58:56.006Z",
      "id": "xnZ7dohii3rEJcbT",
      "name": "RAG"
    }
  ]
}