{
  "name": "PAN Pac test chatbot",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -420,
        730
      ],
      "id": "e497fd85-9c7d-466b-9c49-3fe1a8beffdd",
      "name": "When chat message received",
      "webhookId": "9dccd39b-424a-4073-9d40-63509dd73c1b"
    },
    {
      "parameters": {
        "model": "qwen3:1.7b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -172,
        950
      ],
      "id": "53c5223d-6a54-4ca8-a8e2-eaa5675fa548",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "cuAn52puN6Y1j2cv",
          "name": "Ollama Local"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -52,
        950
      ],
      "id": "7de4095a-048c-4ca1-a8a1-19d08e840fa4",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "hasOutputParser": true,
        "options": {
          "systemMessage": "You need to determine from the user input:\n- a booking reference\n- a query to perform on that booking\n\nInstructions:\n- Do not continue if you do not receive a booking reference from the human. Gently ask to provide one.\n- Once the booking reference is given, set \"filterByBookingRef\" JSON attribute with its value.\n- Once the booking reference is given, set \"query\" JSON attribute containing a summarization of the human request regarding the booking. This should contain a short text of meaningful words.\n- Apply tool \"Format Response as JSON\" to the resulting output.\n- ALWAYS use the output parser to produce JSON as output. NEVER send empty response.",
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -200,
        730
      ],
      "id": "7027a1de-725f-45c6-863c-e3b42af15c16",
      "name": "Classify booking related request",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('When chat message received').item.json.chatInput }}",
        "options": {
          "systemMessage": "You are a helpful assistant retrieving infos about a booking request. Use connected knowledge to respond to this enquiry. You must address human request about that booking."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        616,
        480
      ],
      "id": "e6add3f7-a14b-4bdd-a855-58c3ff7cef84",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": "qwen3:1.7b",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        644,
        700
      ],
      "id": "df545a9f-064f-4438-9c07-661c7447aa51",
      "name": "Ollama Chat Model1",
      "credentials": {
        "ollamaApi": {
          "id": "cuAn52puN6Y1j2cv",
          "name": "Ollama Local"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "function extractJSON(text) {\n    // Match everything after the closing </think> tag\n    const match = text.match(/<\\/think>\\s*\\n+({[\\s\\S]+})/);\n    return match ? JSON.parse(match[1]) : null;\n}\n\nconst input = $input.first().json.output;\n\ntry {\n  const json= extractJSON(input);\n  if (!json) return { chatbot: input} ;\n  return json;\n} catch {\n  return { chatbot: input };\n}\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        176,
        730
      ],
      "id": "1f60376c-ea66-43fc-b88c-b6f415cb921e",
      "name": "Extract relevant query"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "a0b03c34-c2b4-482c-9981-1b0ee4426819",
              "leftValue": "={{ $json.query }}",
              "rightValue": "=",
              "operator": {
                "type": "string",
                "operation": "exists",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        396,
        730
      ],
      "id": "8e4c1f61-53ec-4a08-9c57-d7d05ebe4c79",
      "name": "Branch query or chatbot"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        694,
        880
      ],
      "id": "95a3f617-fca2-45a6-b185-35cf5eb00ea7",
      "name": "No Operation, do nothing"
    },
    {
      "parameters": {
        "toolDescription": "Makes an HTTP request to Supabase's edge function to retrieve booking knowledge from a semantic search.",
        "method": "POST",
        "url": "https://tzdazzxqjilbkrxufnbu.supabase.co/functions/v1/semantic_search_function",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $json.query }}"
            },
            {
              "name": "filterByBookingRef",
              "value": "={{ $json.filterByBookingRef }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        764,
        700
      ],
      "id": "c3cfb421-a6f5-4769-909b-e61930fdcb82",
      "name": "Booking semantic search",
      "credentials": {
        "httpBearerAuth": {
          "id": "XecWP8nPbADhoZRy",
          "name": "Edge Function \"semantic_search_function\""
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Classify booking related request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Classify booking related request",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Classify booking related request",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Classify booking related request": {
      "main": [
        [
          {
            "node": "Extract relevant query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Extract relevant query": {
      "main": [
        [
          {
            "node": "Branch query or chatbot",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Branch query or chatbot": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Booking semantic search": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "98cd8c3a-e178-44be-ba00-765988b28e25",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6a78c7ff53dbf8b685f1a29b43c6372d678ea2682ddfbb53e124dfee099dbf82"
  },
  "id": "8Xa888W3Bhp8V0ZQ",
  "tags": []
}