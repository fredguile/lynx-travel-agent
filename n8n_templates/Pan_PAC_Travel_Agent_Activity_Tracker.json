{
  "name": "Pan PAC Travel Agent Activity Tracker",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "1831ad0f-9c9b-4fb3-99e6-1ce8c0857931",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -860,
        480
      ],
      "id": "0f4baf4d-63ec-4ebb-abf1-080823b16de8",
      "name": "Webhook",
      "webhookId": "1831ad0f-9c9b-4fb3-99e6-1ce8c0857931"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=screenshot",
        "options": {
          "systemMessage": "You are receiving the screenshot of a travel booking agent. The user experience is constrained in a page that displays navigation menus and various form elements. A red cross indicates which field the travel agent has clicked. We want to infer the meaning of that field the travel agent has clicked on and what kind of data should be filled inside. You need to output 3 vital informations:\n- the purpose of the overall form in the page.\n- the purpose of the clicked field. Focus on the closest labels to the red cross and next to the field the travel agent has clicked on. Don't take any label that is too far from that field. Observe the overall form layout to determine if you should read the label that is to the left of the clicked field, or above.\n- the kind of data the travel agent should fill inside that field (specifying the data format you find any visible label  specifying that).\n\nInstructions:\n- Use bullet points for outputing the 3 infos.\n- If you can't retrieve the above informations, don't invent and output that the clicked field is unknowned.\n- If you notice the icon of a password manager such as 1Password or Bitwarden next to the clicked field, please disregard this piece of UX in your reasoning.",
          "passthroughBinaryImages": true
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        -640,
        480
      ],
      "id": "c2311650-b373-40ea-889d-d9df3aa87e39",
      "name": "AI Agent",
      "alwaysOutputData": true,
      "executeOnce": true
    },
    {
      "parameters": {
        "model": "gemma3:12b",
        "options": {
          "keepAlive": "1h"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOllama",
      "typeVersion": 1,
      "position": [
        -552,
        700
      ],
      "id": "1722d217-0927-415e-856b-8198996a6984",
      "name": "Ollama Chat Model",
      "credentials": {
        "ollamaApi": {
          "id": "cuAn52puN6Y1j2cv",
          "name": "Ollama Local"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "text",
        "responseBody": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        -264,
        480
      ],
      "id": "c2296988-367d-40fb-ad31-ebe5c19b97fd",
      "name": "Respond to Webhook"
    }
  ],
  "pinData": {},
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ollama Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "8c09aedd-9707-469c-bad6-80fa9fb4685a",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6a78c7ff53dbf8b685f1a29b43c6372d678ea2682ddfbb53e124dfee099dbf82"
  },
  "id": "idCFIvM0VM1xPBTy",
  "tags": []
}