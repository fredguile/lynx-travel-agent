{
  "name": "Pan PAC Chatbot (prod)",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        780,
        0
      ],
      "id": "bfd54f2a-5eef-4cc3-949d-3368b7b7cfbc",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "45567078-9b8d-436d-851d-2b8e809aacf3",
      "name": "When chat message received",
      "webhookId": "2dce8a97-da40-474a-bc1d-80286a44a9bf"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "You are an intelligent agent dedicated exclusively to assisting with booking-related inquiries.\n\n## Input Handling:\n- If the user's message is unrelated to a booking, respond politely: “I’m here to help with booking-related questions only.”\n- Users may refer to:\n  - A booking reference (internally called “file reference”), or\n  - A customer's last name\n\n## No Booking Reference, But a Last Name Provided\n1. Use the Lynx MCP tool:\n  - Tool: `file_search_by_party_name`\n  - Argument: `partyName` — extract only the last name, excluding contextual words (e.g. “family”, “doctor”)\n2. Handling the tool response:\n  - If results are found: extract the first valid file reference, then proceed to the next step (Booking Reference Found).\n  - If no results: respond politely,\n“No booking could be located for the specified customer.”\n  - If the tool returns an error: include this sentence in the prompt and DO NOT call the tool again\n“An internal error occurred while retrieving the booking. Please try again later.”\n\n## Booking Reference Found\n1. Summarize the user’s request into concise keywords.\n2. Query the RAG Database tool with:\n  - `query`: the extracted keywords\n  - `filterByFileReference`: the identified booking reference\n3. Use the most relevant result from the RAG response to provide a clear and factual answer.\n  - If the RAG response lacks relevant information: “There is no information available for this request at the moment.”\n\n",
          "maxIterations": 5,
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        312,
        0
      ],
      "id": "d4333e63-a5c7-4de3-b9e4-aa34e566cd63",
      "name": "Booking retrieval AI Agent",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "contextWindowLength": 15
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        340,
        220
      ],
      "id": "ed28f3d6-9f0c-4526-88fc-13378f99bd24",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        220,
        220
      ],
      "id": "0a62241f-5aec-43b5-a626-a6b243daa297",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "nKrzBiQTtSNGEZqH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sseEndpoint": "https://pmcp.dodmcdund.cc/sse",
        "authentication": "bearerAuth",
        "include": "selected",
        "includeTools": [
          "file_search_by_party_name"
        ]
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        580,
        220
      ],
      "id": "14a93ee1-0996-41ee-93b7-852265b80020",
      "name": "Lynx MCP Server PROD",
      "credentials": {
        "httpBearerAuth": {
          "id": "HxeOsYch9S8sR8a1",
          "name": "Bearer Token for MCP Server PROD"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "HTTP endpoint to retrieve knowledge from the RAG database. Accept 2 parameters: \"query\" and \"filterByFileReference\".",
        "method": "POST",
        "url": "https://tzdazzxqjilbkrxufnbu.supabase.co/functions/v1/semantic_search_function",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "filterByFileReference",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        460,
        220
      ],
      "id": "7cbfe9b1-4e04-4fdb-9d87-da538723ca82",
      "name": "RAG database PROD",
      "credentials": {
        "httpBearerAuth": {
          "id": "qmtIjLXUGFBe83nl",
          "name": "Semantic Search Bearer Token"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Booking retrieval AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Lynx MCP Server PROD": {
      "ai_tool": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "RAG database PROD": {
      "ai_tool": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "76d42daa-8763-4504-b606-8fcc297499bf",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "71858dc20d24af9eb47eadb374391d01e8a205e765e9dfb0596516276c758084"
  },
  "id": "vsixNDufqpq0QqsX",
  "tags": [
    {
      "name": "MCP",
      "id": "phhzWu7Nkq9Kn27w",
      "createdAt": "2025-06-25T16:48:43.129Z",
      "updatedAt": "2025-06-25T16:48:43.129Z"
    },
    {
      "createdAt": "2025-06-02T14:15:22.742Z",
      "updatedAt": "2025-06-02T14:15:22.742Z",
      "id": "xt6NLU4yp2C3fSqI",
      "name": "RAG"
    }
  ]
}