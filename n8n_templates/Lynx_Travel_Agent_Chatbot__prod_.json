{
  "name": "Lynx Travel Agent Chatbot (prod)",
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.2,
      "position": [
        780,
        0
      ],
      "id": "bfd54f2a-5eef-4cc3-949d-3368b7b7cfbc",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "45567078-9b8d-436d-851d-2b8e809aacf3",
      "name": "When chat message received",
      "webhookId": "2dce8a97-da40-474a-bc1d-80286a44a9bf"
    },
    {
      "parameters": {
        "options": {
          "systemMessage": "# üìò Booking Assistant Agent Prompt\n\nYou are a dedicated intelligent agent tasked exclusively with resolving booking-related inquiries. Your role is to accurately identify relevant booking information and respond based on contextual clues.\n\n---\n\n## üßæ Input Handling\n\n- If the input is **unrelated to bookings**, respond:  \n  > **‚ÄúI‚Äôm here to help with booking-related questions only.‚Äù**\n\n- Always use **contextual facts** from the user's message and tool responses to guide your answers.\n\n- Users may refer to:  \n  - A **booking/file reference**  \n  - A **customer reference**  \n  - A **customer‚Äôs last name**  \n  - A **company code**\n\n‚ö†Ô∏è **Important:** Do **not** confuse customer references with booking/file references ‚Äî they serve **distinct purposes** and must never be used interchangeably.\n\n---\n\n## üîç No Booking Reference Provided, Last Name Available\n\n1. Use Tool: `file_search_by_party_name`  \n   - **Argument:** `partyName` ‚Äî extract only the **last name**, excluding contextual words (e.g. _‚Äúfamily,‚Äù ‚Äúdoctor,‚Äù_ etc.) and first name.\n\n2. Tool Response Handling:\n   - ‚úÖ **Single match found:**  \n     ‚Üí Immediately retrieve `file reference` and **proceed to Booking Reference Found**\n   - üîÑ **Multiple matches:**  \n     ‚Üí Infer the most likely booking; if ambiguous, prompt for more details (e.g. company code, client reference)\n   - ‚ùå **No results found:**  \n     > **‚ÄúNo booking could be located for the specified customer.‚Äù**\n   - ‚ö†Ô∏è **Tool error:**  \n     > **‚ÄúAn internal error occurred while retrieving the booking. Please try again later.‚Äù**  \n     _Do not retry the tool_\n\n3. ‚õî Tool Response Limitation:  \n   - Tool only returns: Company Code, Client Reference, File Reference, Currency, Status, and Travel Date.  \n   - üëâ For **any other information** ‚Äî such as itinerary, pricing, or policies ‚Äî you **must** proceed to Booking Reference Found and call `RAG Database`.\n\n---\n\n## üìÅ Booking Reference Found\n\nOnce a valid **file reference** is available:\n\n1. üö´ Never treat **client reference** as a booking reference.\n2. ‚úÇÔ∏è Extract concise **keywords** that represent the user's query.\n3. Use Tool: `RAG Database`\n   - **Parameters:**\n     - `query`: extracted keywords\n     - `filterByFileReference`: booking reference\n4. Tool Response Handling:\n   - ‚úÖ **Relevant result found:**  \n     ‚Üí Deliver a clear, factual, context-based response\n   - ‚ùì **No relevant result:**  \n     > **‚ÄúThere is no information available for this request at the moment.‚Äù**",
          "maxIterations": 5,
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        312,
        0
      ],
      "id": "d4333e63-a5c7-4de3-b9e4-aa34e566cd63",
      "name": "Booking retrieval AI Agent",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        340,
        220
      ],
      "id": "ed28f3d6-9f0c-4526-88fc-13378f99bd24",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        220,
        220
      ],
      "id": "0a62241f-5aec-43b5-a626-a6b243daa297",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "nKrzBiQTtSNGEZqH",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "sseEndpoint": "https://pmcp.dodmcdund.cc/sse",
        "authentication": "bearerAuth",
        "include": "selected",
        "includeTools": [
          "file_search_by_party_name"
        ]
      },
      "type": "@n8n/n8n-nodes-langchain.mcpClientTool",
      "typeVersion": 1,
      "position": [
        580,
        220
      ],
      "id": "14a93ee1-0996-41ee-93b7-852265b80020",
      "name": "Lynx MCP Server PROD",
      "credentials": {
        "httpBearerAuth": {
          "id": "HxeOsYch9S8sR8a1",
          "name": "Bearer Token for MCP Server PROD"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "HTTP endpoint to retrieve knowledge from the RAG database. Accept 2 parameters: \"query\" and \"filterByFileReference\".",
        "method": "POST",
        "url": "https://tzdazzxqjilbkrxufnbu.supabase.co/functions/v1/hybrid_search_function",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters0_Value', ``, 'string') }}"
            },
            {
              "name": "filterByFileReference",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('parameters1_Value', ``, 'string') }}"
            }
          ]
        },
        "options": {},
        "optimizeResponse": true,
        "dataField": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Field_Containing_Data', ``, 'string') }}"
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        460,
        220
      ],
      "id": "7cbfe9b1-4e04-4fdb-9d87-da538723ca82",
      "name": "RAG database PROD",
      "credentials": {
        "httpBearerAuth": {
          "id": "qmtIjLXUGFBe83nl",
          "name": "Semantic Search Bearer Token"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Booking retrieval AI Agent": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Lynx MCP Server PROD": {
      "ai_tool": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "RAG database PROD": {
      "ai_tool": [
        [
          {
            "node": "Booking retrieval AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "c16bbb57-9963-476b-b1ec-bcf948ad05f4",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "71858dc20d24af9eb47eadb374391d01e8a205e765e9dfb0596516276c758084"
  },
  "id": "vsixNDufqpq0QqsX",
  "tags": [
    {
      "createdAt": "2025-06-25T16:48:43.129Z",
      "updatedAt": "2025-06-25T16:48:43.129Z",
      "id": "phhzWu7Nkq9Kn27w",
      "name": "MCP"
    },
    {
      "createdAt": "2025-06-02T14:15:22.742Z",
      "updatedAt": "2025-06-02T14:15:22.742Z",
      "id": "xt6NLU4yp2C3fSqI",
      "name": "RAG"
    }
  ]
}